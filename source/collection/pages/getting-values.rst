====================
3. Recebendo Valores
====================

O método ``get()`` permite acessar posições no objeto.

Considere o objeto abaixo para todos os exemplos desta página:

.. code:: php

   use Cajudev\Collection;

   $collection = new Collection([
       'lorem',
       'ipsum' => 'consectetur',
       'dolor' => ['sit' => 'amet']
    ]);

3.1 Acesso simples
------------------

.. code:: php

    // ================================================================================================================ //

        $collection->get(0); // lorem

    // ================================================================================================================ //

3.2 Acesso encadeado
--------------------

.. code:: php

    // ================================================================================================================ //

        $collection->get('dolor')->get('sit'); // amet

    // ================================================================================================================ //

3.3 Acesso à múltiplos valores
------------------------------

.. code:: php

    // ================================================================================================================ //

        $collection->get('ipsum', 'dolor'); // ['ipsum' => 'consectetur', 'dolor' => ['sit' => 'amet']]

    // ================================================================================================================ //

3.4 Acesso multidimensional por notação de ponto
------------------------------------------------

.. code:: php

    // ================================================================================================================ //

        $collection->get('dolor.sit'); // amet

    // ================================================================================================================ //

3.5 Tentativa de acesso à uma chave inválida
--------------------------------------------

.. code:: php

    // ================================================================================================================ //

        $collection->get('invalid'); // null (nenhum erro gerado)
    
    // ================================================================================================================ //

3.6 Acesso total
-----------------

.. code:: php

    // ================================================================================================================ //  

        $collection->get(); // ['lorem', 'ipsum', 'dolor' => ['sit' => 'amet']]

    // ================================================================================================================ //

3.7 Acesso ao tamanho do array
------------------------------

.. code:: php

    // ================================================================================================================ //
   
        echo $collection->length; // 3

    // ================================================================================================================ //


3.8 Como é possível acessar métodos de maneira encadeada?
---------------------------------------------------------

Qualquer array desse objeto, imediatamente ao ser acessado se transformará em um objeto collection, fornecendo todos os
seus métodos.

.. code:: php

    // ================================================================================================================ //

    print_r($collection);

    /*
    Cajudev\Collection Object
        (
            [content:protected] => Array
                (
                    [0] => lorem
                    [ipsum] => consectetur
                    [dolor] => Array       -----------> Aqui 'dolor' ainda é um array comum
                        (
                            [sit] => amet
                        )

                )

            [length:protected] => 3
        )
    */

    $dolor = $collection->get('dolor');  //  -------------> Ao ser acessado, é transformado em Collection

    print_r($dolor);

    /*
    Cajudev\Collection Object
        (
            [content:protected] => Array
                (
                    [sit] => amet
                )

            [length:protected] => 1
        )
    */

    // ================================================================================================================ //